/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * To learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.5/samples
 */

plugins {
	id "com.github.johnrengelman.shadow" version "7.1.0"
}

apply plugin: 'java-library'
apply plugin: 'maven-publish'

version = '0.1_build1'

repositories {
	mavenCentral()
	maven {
		url 'https://maven.pkg.github.com/m-marvin/app-javarun'
		credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
            password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
        }
	}
	maven {
		url 'https://maven.pkg.github.com/m-marvin/library-commandlineparser'
		credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
            password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
        }
	}
	mavenLocal()
}

java {
	sourceCompatibility = "1.17"
	targetCompatibility = "1.17"
    withSourcesJar()
}

configurations {
	shade;
	implementation.extendsFrom(shade);
}

shadowJar {
	configurations = [project.configurations.shade];
}

dependencies {
	
	// CommandLineParser
	shade 'de.m_marvin.commandlineparser:commandlineutility:2.0'
	
	// GSON
	//implementation "com.google.code.gson:gson:2.9.1"
	
	// SimpleLogging
	shade 'de.m_marvin.simplelogging:simplelogging:2.3'
	
	// JavaRun
	shade 'de.m_marvin.javarun:javarun:1.2'
	
	// JAXB
	//shade "com.sun.xml.bind:jaxb-runtime:3.0.0";
	//shade "com.sun.xml.bind:jaxb-impl:3.0.0"
	
	shade 'de.m_marvin.metabuild:basicxml:0.1_build1'
	
	// Maven API
	//shade 'org.apache.maven:maven-resolver-provider:3.9.9'
	//shade 'org.apache.maven.resolver:maven-resolver-supplier:1.9.22'
	
}

tasks.register('apiJar', Jar) {
	description "Assembles the jar containing the api classes"
	group = "build"
	
    from sourceSets.main.output
    include 'de/m_marvin/metabuild/api/**'
    archiveClassifier  = 'api'
}

jar {
    manifest {
        attributes 'Main-Class': 'de.m_marvin.metabuild.core.cli.MetaLaunch'
        attributes 'Implementation-Version': version
        attributes 'Implementation-Title': project.name
        attributes 'Implementation-Vendor-Id': 'de.m_marvin'
    }
}

apiJar {
    manifest {
        attributes 'Implementation-Version': version
        attributes 'Implementation-Title': project.name + '-API'
        attributes 'Implementation-Vendor-Id': 'de.m_marvin'
    }
}

assemble.dependsOn(apiJar)

task exportBin() {
	description "Copies bineries into output folder"
	group = "output"
	
	doLast {
		ant.copy(file:'build/libs/' + project.name + '-' + version + '-all.jar', tofile:'../bin/metabuild-core.jar')
	}
}

exportBin.dependsOn(shadowJar)
build.dependsOn(exportBin)

task exportBinZip(type: Zip) {
	description "Creates an zip from the bin directory for the installation entry in the wrapper"
	group = "output"
	
	from fileTree(dir: '../bin')
	//archiveName(project.name + '-' + version + '.zip')
	destinationDirectory = file('../metabuild-wrapper/src/main/resources/included/')
}
exportBinZip.dependsOn(exportBin);
build.dependsOn(exportBinZip);

artifacts{
    archives sourcesJar
    archives apiJar
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'de.m_marvin.metabuild'
        	artifactId = project.name
        	artifact apiJar
        	from components.java
        }
    }
}
