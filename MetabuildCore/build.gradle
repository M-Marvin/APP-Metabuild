/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * To learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.5/samples
 */

plugins {
	id "com.github.johnrengelman.shadow" version "7.1.0"
}

apply plugin: 'java-library'
apply plugin: 'maven-publish'

version = '0.1_build0'

repositories {
	mavenCentral()
	maven {
		url 'https://maven.pkg.github.com/m-marvin/app-javarun'
		credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
            password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
        }
	}
	maven {
		url 'https://maven.pkg.github.com/m-marvin/library-commandlineparser'
		credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
            password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
        }
	}
	mavenLocal()
}

dependencies {
	
	// CommandLineParser
	implementation 'de.m_marvin.commandlineparser:commandlineparser:1.1'
	
	// GSON
	//implementation "com.google.code.gson:gson:2.9.1"
	
	// SimpleLogging
	implementation 'de.m_marvin.simplelogging:simplelogging:2.1.3'
	
	// JavaRun
	implementation 'de.m_marvin.javarun:javarun:1.2'
	
	// ConsoleMode
	//implementation 'de.m_marvin.cmode:cmode:0.1_build1'
	
}

tasks.register('apiJar', Jar) {
	description "Assembles the jar containing the api classes"
	group = "build"
	
    from sourceSets.main.output
    include 'de/m_marvin/metabuild/api/**'
    archiveClassifier  = 'api'
}

jar {
    manifest {
        attributes 'Main-Class': 'de.m_marvin.metabuild.cli.MetaLaunch'
        attributes 'Implementation-Version': version
        attributes 'Implementation-Title': project.name
        attributes 'Implementation-Vendor-Id': 'de.m_marvin'
    }
}

apiJar {
    manifest {
        attributes 'Implementation-Version': version
        attributes 'Implementation-Title': project.name + '-API'
        attributes 'Implementation-Vendor-Id': 'de.m_marvin'
    }
}

assemble.dependsOn(apiJar)

java {
	sourceCompatibility = "1.17"
	targetCompatibility = "1.17"
    withSourcesJar()
}

task makeBin() {
	description "Copies bineries into output folder"
	group = "output"
	
	doLast {
		ant.copy(file:'build/libs/' + project.name + '-' + version + '-all.jar', tofile:'../Bin/metabuild-core.jar')
	}
}
makeBin.dependsOn(shadowJar)
build.dependsOn(makeBin)

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'de.m_marvin.metabuild'
        	artifactId = project.name
        
			from components.java
        }
    }
}
